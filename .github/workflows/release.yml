name: Release Chrome Extension

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.0.0)"
        required: true
        type: string
      prerelease:
        description: "Is this a pre-release?"
        required: false
        type: boolean
        default: false

jobs:
  build-and-release:
    name: Build and Release Extension
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for changelog generation

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test
        continue-on-error: true

      - name: Run linter
        run: npm run lint

      - name: Run type checking
        run: npm run typecheck

      - name: Build extension
        run: npm run build

      - name: Update manifest version
        run: |
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          VERSION="${VERSION#v}"  # Remove 'v' prefix if present

          echo "Updating manifest.json to version $VERSION"

          node -e "
          const fs = require('fs');
          const manifest = JSON.parse(fs.readFileSync('./apps/extension/manifest.json', 'utf8'));
          manifest.version = '$VERSION';
          fs.writeFileSync('./apps/extension/manifest.json', JSON.stringify(manifest, null, 2));
          "

      - name: Create extension package
        run: |
          cd apps/extension

          # Create production build directory
          mkdir -p ../../dist

          # Create ZIP for Chrome Web Store
          zip -r ../../dist/briefcase-extension-chrome.zip . \
            -x "*.DS_Store" \
            -x "__MACOSX/*" \
            -x "node_modules/*" \
            -x ".git/*" \
            -x "*.map" \
            -x "test/*" \
            -x "*.test.*"
            
          # Create source code archive for Chrome Web Store review
          cd ../..
          zip -r dist/briefcase-extension-source.zip . \
            -x "*.DS_Store" \
            -x "__MACOSX/*" \
            -x "node_modules/*" \
            -x ".git/*" \
            -x "dist/*" \
            -x "coverage/*"
            
          echo "✅ Created extension packages"

      - name: Generate changelog
        id: changelog
        run: |
          VERSION="${{ github.event.inputs.version || github.ref_name }}"

          # Generate changelog from commits
          echo "## What's Changed" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md

          # Group commits by type
          echo "### Features" >> RELEASE_NOTES.md
          git log --pretty=format:"* %s (%h)" --grep="^feat" $(git describe --tags --abbrev=0 2>/dev/null || echo "")..HEAD >> RELEASE_NOTES.md || echo "* No new features" >> RELEASE_NOTES.md

          echo "" >> RELEASE_NOTES.md
          echo "### Bug Fixes" >> RELEASE_NOTES.md
          git log --pretty=format:"* %s (%h)" --grep="^fix" $(git describe --tags --abbrev=0 2>/dev/null || echo "")..HEAD >> RELEASE_NOTES.md || echo "* No bug fixes" >> RELEASE_NOTES.md

          echo "" >> RELEASE_NOTES.md
          echo "### Other Changes" >> RELEASE_NOTES.md
          git log --pretty=format:"* %s (%h)" --grep="^(chore|docs|style|refactor|perf|test|build|ci)" $(git describe --tags --abbrev=0 2>/dev/null || echo "")..HEAD >> RELEASE_NOTES.md || echo "* No other changes" >> RELEASE_NOTES.md

          echo "" >> RELEASE_NOTES.md
          echo "---" >> RELEASE_NOTES.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 2>/dev/null || echo "main")...$VERSION" >> RELEASE_NOTES.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version && format('v{0}', github.event.inputs.version) || github.ref_name }}
          name: Release ${{ github.event.inputs.version || github.ref_name }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: ${{ github.event.inputs.prerelease || false }}
          files: |
            dist/briefcase-extension-chrome.zip
            dist/briefcase-extension-source.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to Chrome Web Store
        if: github.event.inputs.prerelease != 'true'
        continue-on-error: true # Don't fail if Chrome Web Store upload fails
        run: |
          echo "⚠️  Chrome Web Store upload requires manual configuration"
          echo "Please upload dist/briefcase-extension-chrome.zip manually to:"
          echo "https://chrome.google.com/webstore/devconsole"
          echo ""
          echo "To automate this in the future:"
          echo "1. Get OAuth credentials from Google Cloud Console"
          echo "2. Add CHROME_CLIENT_ID, CHROME_CLIENT_SECRET, CHROME_REFRESH_TOKEN as secrets"
          echo "3. Uncomment the chrome-webstore-upload-cli step below"

          # Uncomment when credentials are configured:
          # - name: Upload to Chrome Web Store
          #   uses: mnao305/chrome-extension-upload@v4.0.1
          #   with:
          #     file-path: dist/briefcase-extension-chrome.zip
          #     extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
          #     client-id: ${{ secrets.CHROME_CLIENT_ID }}
          #     client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          #     refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          #     publish: true  # Set to false to upload without publishing
